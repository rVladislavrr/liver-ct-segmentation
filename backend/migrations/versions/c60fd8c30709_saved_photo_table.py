"""saved_photo_table

Revision ID: c60fd8c30709
Revises: 5d39c5f47fa9
Create Date: 2025-04-17 18:53:39.544220

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c60fd8c30709'
down_revision: Union[str, None] = '5d39c5f47fa9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('photos',
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('num_images', sa.Integer(), nullable=False),
    sa.Column('author_uuid', sa.UUID(), nullable=False),
    sa.Column('file_uuid', sa.UUID(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author_uuid'], ['users.uuid'], ),
    sa.ForeignKeyConstraint(['file_uuid'], ['files.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('author_uuid', 'file_uuid', 'num_images', name='uq_photo')
    )
    op.create_index(op.f('ix_photos_uuid'), 'photos', ['uuid'], unique=False)
    op.create_table('user_saved_photos',
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_uuid', sa.UUID(), nullable=False),
    sa.Column('photo_uuid', sa.UUID(), nullable=False),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['photo_uuid'], ['photos.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('user_uuid', 'photo_uuid', name='uq_user_photo')
    )
    op.drop_index('ix_saved_photos_uuid', table_name='saved_photos')
    op.drop_table('saved_photos')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('saved_photos',
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('num_images', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('author_uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('file_uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('create_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('update_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('delete_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_uuid'], ['users.uuid'], name='saved_photos_author_uuid_fkey'),
    sa.ForeignKeyConstraint(['file_uuid'], ['files.uuid'], name='saved_photos_file_uuid_fkey'),
    sa.PrimaryKeyConstraint('uuid', name='saved_photos_pkey'),
    sa.UniqueConstraint('author_uuid', 'file_uuid', 'num_images', name='uq_saved_photo')
    )
    op.create_index('ix_saved_photos_uuid', 'saved_photos', ['uuid'], unique=False)
    op.drop_table('user_saved_photos')
    op.drop_index(op.f('ix_photos_uuid'), table_name='photos')
    op.drop_table('photos')
    # ### end Alembic commands ###
